// Generated by CoffeeScript 1.10.0
(function() {
  var assert;

  assert = chai.assert;

  describe("Hand", function() {
    var hand;
    hand = null;
    beforeEach(function() {
      return hand = new Hand();
    });
    return describe("Scoring", function() {
      it("should score revealed cards correctly", function() {
        var card1, card2;
        card1 = new Card({
          rank: 7,
          suit: 1
        });
        card2 = new Card({
          rank: 5,
          suit: 2
        });
        hand.add(card1);
        hand.add(card2);
        return assert.strictEqual(hand.scores(), 12);
      });
      it("should score a hand with some non-revealed cards correctly", function() {
        var card1, card2, card3;
        card1 = new Card({
          rank: 2,
          suit: 1
        });
        card2 = new Card({
          rank: 6,
          suit: 3
        });
        card3 = new Card({
          rank: 10,
          suit: 2
        });
        card1.flip();
        hand.add(card1);
        hand.add(card2);
        hand.add(card3);
        return assert.strictEqual(hand.scores(), 16);
      });
      it("should score a hand with an ace correctly", function() {
        var card1, card2;
        card1 = new Card({
          rank: 1,
          suit: 0
        });
        card2 = new Card({
          rank: 7,
          suit: 3
        });
        hand.add(card1);
        hand.add(card2);
        return assert.strictEqual(hand.scores(), 18);
      });
      return it("should count ace value as 1 (not 11) when needed to", function() {
        var card1, card2, card3;
        card1 = new Card({
          rank: 1,
          suit: 0
        });
        card2 = new Card({
          rank: 10,
          suit: 3
        });
        card3 = new Card({
          rank: 10,
          suit: 2
        });
        hand.add(card1);
        hand.add(card2);
        hand.add(card3);
        return assert.strictEqual(hand.scores(), 21);
      });
    });
  });

}).call(this);

//# sourceMappingURL=HandSpec.js.map
